<?php
namespace Ekv\B\modules\translate\controllers;

use CController;
use EController;
use Ekv\B\components\Controllers\BackendControllerBase;

class EpisodeController extends TranslateController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->setEximLayout();
    }

    protected function _breadcrumps()
    {
        parent::_breadcrumps();
        if($this->action->id == 'index'){
            $movie_id = yApp()->request->getParam('movieID');
            $this->_addMovieIdBc($movie_id);
//            $url = $this->createUrl("/translate/episode/index/", array('movieID' =>  $movie_id));
//
//            $criteria = new \CDbCriteria(array('select' => 'movieID, movieName'));
//            $movieObj = \BTransMovie::model()->findByPk($movie_id, $criteria);
//            if($movieObj){
//                $this->_addBreadCrumpItem($movieObj->movieName, $url);
//            }
        }

    }


    function actionIndex($movieID)
    {
        $model = new \BTransEpisode('search');
        $model->setMovieID($movieID);

        $get_name = get_class($model);
        $model->unsetAttributes(); // clear any default values

        if (isset($_REQUEST[$get_name])) {
            $model->attributes = $_REQUEST[$get_name];
        }

        $this->renderAuto(array(
            'model' => $model
        ));
    }

    /**
     * Grid with JOIN and CUSTOM working filters
     * @param $movieID
     */
    function actionSqlIndex($movieID)
    {
        $model = new \BTransEpisodeSql('search');
        $model->setMovieID($movieID);

        $model->unsetAttributes();
        $get_name = get_class($model);

        //$model->seasonNum = 4;

        if (isset($_GET[$get_name])) {
            $model->attributes = $_GET[$get_name];
        }

        $this->renderAuto(array(
            'model' => $model
        ));
    }

//    /**
//     * @deprecated
//     */
//    function actionSqlIndexOLd()
//    {
//        $sql = "
//            SELECT e.*, m.movieName
//            FROM episodes e
//                INNER JOIN movies m
//                    ON m.movieID = e.movieID
//            WHERE
//                e.movieID = 5
//        ";
//
//        $dataProvider = new \CSqlDataProvider($sql, array(
//            //'db' => yDb(),
//            'keyField' => 'episodeID',
//            'totalItemCount' => 50,//todo fix
//            'sort' => array(
//                'attributes' => array('seasonNum', 'episodeNum'),
//                'defaultOrder' => array('seasonNum' => true, 'episodeNum' => true),
//            ),
//            'pagination' => array(
//                'pageSize' => 10,
//            ),
//        ));
//
//        $this->renderAuto(array(
//            'provider' => $dataProvider
//        ));
//    }

}
 